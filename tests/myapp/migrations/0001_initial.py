# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-07 23:19
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AutoNowDateFieldModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('now', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('name', models.CharField(max_length=50)),
                ('category_uuid', models.CharField(max_length=50, null=True, unique=True)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcreteModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('ghosts', models.CharField(max_length=50)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomPKName',
            fields=[
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('my_id', models.AutoField(db_column='my_custom_name', primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('name', models.CharField(max_length=50, unique=True)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Insert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category_fk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items_by_fk', to='myapp.Category', to_field='category_uuid')),
                ('category_pk', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='items_by_pk', to='myapp.Category')),
            ],
        ),
        migrations.CreateModel(
            name='MultiOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('name', models.CharField(max_length=50)),
                ('size', models.PositiveIntegerField()),
                ('date', models.DateField()),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultipleManagerModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('published', models.BooleanField()),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiTableInheritanceA1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MultiTableInheritanceB1',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ReferencingModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fk', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='myapp.Category')),
                ('m2m', models.ManyToManyField(related_name='_referencingmodel_m2m_+', to='myapp.Category')),
                ('one', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='+', to='myapp.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Tree',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='UUIDNode',
            fields=[
                ('left', models.DecimalField(decimal_places=30, max_digits=31)),
                ('right', models.DecimalField(decimal_places=30, max_digits=31)),
                ('level', models.PositiveIntegerField()),
                ('tree_id', models.UUIDField()),
                ('uuid', models.UUIDField(default=uuid.uuid4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ConcreteAbstractConcreteAbstract',
            fields=[
                ('concretemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapp.ConcreteModel')),
            ],
            options={
                'abstract': False,
            },
            bases=('myapp.concretemodel',),
        ),
        migrations.CreateModel(
            name='ConcreteConcrete',
            fields=[
                ('concretemodel_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapp.ConcreteModel')),
            ],
            options={
                'abstract': False,
            },
            bases=('myapp.concretemodel',),
        ),
        migrations.CreateModel(
            name='MultiTableInheritanceA2',
            fields=[
                ('multitableinheritancea1_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapp.MultiTableInheritanceA1')),
                ('name', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
            bases=('myapp.multitableinheritancea1',),
        ),
        migrations.CreateModel(
            name='MultiTableInheritanceB2',
            fields=[
                ('multitableinheritanceb1_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapp.MultiTableInheritanceB1')),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
            bases=('myapp.multitableinheritanceb1',),
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('person_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='myapp.Person')),
                ('type', models.CharField(max_length=50)),
            ],
            options={
                'ordering': ['left'],
                'abstract': False,
            },
            bases=('myapp.person',),
        ),
        migrations.AddField(
            model_name='game',
            name='genre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.Genre'),
        ),
        migrations.AddField(
            model_name='game',
            name='genres_m2m',
            field=models.ManyToManyField(related_name='games_m2m', to='myapp.Genre'),
        ),
        migrations.AddField(
            model_name='book',
            name='fk',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='books_fk', to='myapp.Category'),
        ),
        migrations.AddField(
            model_name='book',
            name='m2m',
            field=models.ManyToManyField(blank=True, related_name='books_m2m', to='myapp.Category'),
        ),
        migrations.CreateModel(
            name='SingleProxyModel',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('myapp.concretemodel',),
        ),
        migrations.CreateModel(
            name='DoubleProxyModel',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
            },
            bases=('myapp.singleproxymodel',),
        ),
    ]
